import { connectDB } from "@/util/database";
import { getServerSession } from "next-auth";
import { authOptions } from "../auth/[...nextauth]";

export default async function handler(req, res) {
  try {
    // 세션 가져오기
    let session = await getServerSession({ req, res }, authOptions);
    console.log("세션:", session);

    if (!session || !session.user || !session.user.email) {
      return res.status(401).json({ error: "세션이 없거나 인증되지 않았습니다." });
    }

    const getCurrentTime = () => new Date();
    let db = (await connectDB).db("forum");
    let users;

    // 사용자 정보 가져오기
    const email = session.user.email;
    users = await db.collection("users").findOne({ email });

    if (!users) {
      throw new Error("해당 이메일을 가진 사용자를 찾을 수 없습니다.");
    }

    req.body.profile_img = users.image;
    req.body.author_name = session.user.name || session.user.id; // 유저 이름

    req.body.post_id = users._id;
    req.body.author = session.user.email; // 이메일 정보
    req.body.post_time = getCurrentTime();

    console.log("최종 유저 데이터:", session);

    // 게시물 저장
    await savePost(req.body);

    res.status(200).redirect("/community");
  } catch (error) {
    console.error("오류 발생:", error.message);
    res.status(500).json({ error: error.message });
  }
}

async function savePost(postData) {
  const db = (await connectDB).db("forum");
  await db.collection("community_post").insertOne(postData);
}
